
$carouselHeight : 350px;
$carouselWidth : 786px;
$numImages : 3;

.carousel-content {
    margin: 50px 0;
    min-width: 1066px;
}


.ui_carousel {
    position: relative;
    margin: 0px auto;
}

.ui_carousel-large {
    width: $carouselWidth;
    height: $carouselHeight;
    overflow: hidden;
}

.ui_carousel-large input[type=radio] {
   display: none;
}

.ui_carousel-large .ui_carousel-images {
    margin-top: 20px;
     transition: transform 0.5s ease 0s;
     background-color:#000;
     height: $carouselHeight;

}

.ui_carousel-large .ui_carousel-dots  {
    bottom: 5px;
    position: absolute;
    text-align: center;
    width: $carouselWidth;
    z-index: 5;
}

.ui_carousel-large .ui_carousel-dots .ui_carousel-dot {
    background-color: rgba(255,255,255,.5);
    border-radius: 50%;
    display: inline-block;
    height: 15px;
    list-style-type: none;
    margin: 0 5px;
    width: 15px;
}

// .ui_carousel-images > img,
.ui_carousel-large > label {
  
} 

.ui_carousel-images img {
    transition: all .5s ease;
    position:absolute;
    top: 0
    // left: 787px;
}

.ui_carousel-images > img:nth-of-type(1) { transform:translateX(0%)}
.ui_carousel-images > img:nth-of-type(2) { transform:translateX(100%); opacity: 0.5;}
.ui_carousel-images > img:nth-of-type(3) { transform:translateX(200%); opacity: 0.5;}

.ui_carousel-large > label {
    height: 30px;
    position: absolute;
    top: 52.5%;
    width: 30px;
}

@mixin createRules($num, $type){
    $foo : '';
    $start : '.ui_carousel-large input[type=radio]:nth-of-type(';
    $imagesRight : '):checked ~ label:nth-of-type(';
    $imagesMiddle : '):checked ~ .ui_carousel-images';
    $dotsMiddle :'):checked ~ .ui_carousel-dots .ui_carousel-dot:nth-of-type(';
    $numBack : $num;
    $b : 1;
    @if $type == 'left' {
        @for $i from 1 through $num {
            $foo : $foo + $start + $i + $imagesRight + $numBack + '),
            ';
            $numBack : $i;
        }
    } @else if $type == 'right'{
        @for $i from 1 through $num {
            $b : $b + 1;
            $foo : $foo + $start + $i + $imagesRight + $b +'),
            ';
             @if $i == $num - 1  {
                $b : 0;
             }
        }
    // } @else if $type == 'images' {
    //     @for $i from 1 through $num {
    //         $foo : $foo + $start + $i + $imagesMiddle + ' , 
    //         ';
    //     }
    } @else if $type == 'dots' {
        @for $i from 1 through $num {
            $foo : $foo + $start + $i + $dotsMiddle + $i +'),
            '; 
        }
    }

    #{$foo} {
        @content;
    }
}

@include createRules($numImages,'left'){
     background: transparent url(../images/carousel/left.png) no-repeat;
     display: block;
     left: 10px;
     z-index: 5;
}

@include createRules($numImages, 'right'){
    background:transparent url(../images/carousel/right.png) no-repeat;
    display: block;
    right:10px;
    z-index: 4;
}

//  @include createRules($numImages, 'images'){
//        transform: translateX(0%);
//         top: 0;
//         opacity: 1;
// }

@include createRules($numImages, 'dots'){
    background-color: rgba(255, 255, 255, .75);
}

.ui_carousel-large input[type=radio]:nth-of-type(1):checked ~ .ui_carousel-images {
  transform: translateX(0%);
}

@for $i from 1 through ($numImages - 1) { 
    .ui_carousel-large input[type=radio]:nth-of-type(#{$i+1}):checked ~ .ui_carousel-images {
        transform: translateX(#{$i * -100%});
        top: 0;
    }
}
@for $i from 1 through ($numImages - 1) { 
    .ui_carousel-large input[type=radio]:nth-of-type(#{$i+1}):checked ~ .ui_carousel-images img:nth-of-type(#{$i+1}) {
        opacity: 1;
    }
}

